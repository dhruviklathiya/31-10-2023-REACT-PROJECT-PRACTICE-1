{"ast":null,"code":"var _jsxFileName = \"/Users/dhruviklathiya/Desktop/D CODER/09 React js/Project_practice/31-10-2023-REACT-PROJECT-PRACTICE-1/src/App13.jsx\",\n  _s = $RefreshSig$();\n// Create 1 file like .env but name it Constant.jsx which contains environment variable\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { get_API } from './API/api';\nimport { getData, url } from './Constant';\n// Create 2 folders (1)Components (2)API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App13 = () => {\n  _s();\n  const [input, setInput] = useState({});\n  // const [updateinput,setUpdateInput] = useState({})\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    get_API(url, getData).then(res => {\n      setData(res.data);\n    });\n  }, []);\n  const input_handler = e => {\n    setInput({\n      ...input,\n      [e.target.name]: e.target.value\n    });\n  };\n  // const submit_handler = () => {\n  //     axios.post(\"http://localhost:3001/posts\",input).then((res)=>{\n  //         setData([...data,res.data]);\n  //     })\n  // }\n  // const delete_handler = (id) => {\n  //     axios.delete(`http://localhost:3001/posts/${id}`).then((res)=>{\n  //         setData(data.filter((one_)=>one_.id !== id))\n  //     })\n  // }\n  // const input_handler_update = (e) => {\n  //     setUpdateInput({...updateinput, [e.target.name]:e.target.value})\n  // }\n  // const update_handler1 = (ind) => {\n  //     setUpdateInput(data[ind])\n  // }\n  // const update_handler2 = () => {\n  //     axios.put(`http://localhost:3001/posts/${updateinput.id}`,updateinput).then((res)=>{\n  //         console.log(res);\n  //         setData([data.map((val_,ind_)=>{\n  //             if(val_.id == updateinput.id){\n  //                 data[ind_] = updateinput\n  //             }\n  //         })])\n  //     })\n  //     // Virtual dom update without API calling\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        onChange: input_handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"author\",\n        onChange: input_handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(App13, \"zBAzM8RW/Pc0jXR7SFz/gPdhjoY=\");\n_c = App13;\nexport default App13;\nvar _c;\n$RefreshReg$(_c, \"App13\");","map":{"version":3,"names":["React","useState","useEffect","axios","get_API","getData","url","jsxDEV","_jsxDEV","Fragment","_Fragment","App13","_s","input","setInput","data","setData","then","res","input_handler","e","target","name","value","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dhruviklathiya/Desktop/D CODER/09 React js/Project_practice/31-10-2023-REACT-PROJECT-PRACTICE-1/src/App13.jsx"],"sourcesContent":["// Create 1 file like .env but name it Constant.jsx which contains environment variable\nimport React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { get_API } from './API/api'\nimport { getData, url } from './Constant'\n// Create 2 folders (1)Components (2)API\nconst App13 = () => {\n    const [input,setInput] = useState({})\n    // const [updateinput,setUpdateInput] = useState({})\n    const [data,setData] = useState([])\n    useEffect(()=>{\n        get_API(url,getData).then((res)=>{\n            setData(res.data);\n        })\n    },[])\n    const input_handler = (e) => {\n        setInput({...input, [e.target.name]:e.target.value})\n    }\n    // const submit_handler = () => {\n    //     axios.post(\"http://localhost:3001/posts\",input).then((res)=>{\n    //         setData([...data,res.data]);\n    //     })\n    // }\n    // const delete_handler = (id) => {\n    //     axios.delete(`http://localhost:3001/posts/${id}`).then((res)=>{\n    //         setData(data.filter((one_)=>one_.id !== id))\n    //     })\n    // }\n    // const input_handler_update = (e) => {\n    //     setUpdateInput({...updateinput, [e.target.name]:e.target.value})\n    // }\n    // const update_handler1 = (ind) => {\n    //     setUpdateInput(data[ind])\n    // }\n    // const update_handler2 = () => {\n    //     axios.put(`http://localhost:3001/posts/${updateinput.id}`,updateinput).then((res)=>{\n    //         console.log(res);\n    //         setData([data.map((val_,ind_)=>{\n    //             if(val_.id == updateinput.id){\n    //                 data[ind_] = updateinput\n    //             }\n    //         })])\n    //     })\n    //     // Virtual dom update without API calling\n    // }\n    return (\n    <>\n    <div>\n    <input name='title' onChange={input_handler}/>\n    <input name='author' onChange={input_handler}/>\n    {/* <button type='button' onClick={submit_handler}>Add data</button> */}\n    </div>\n    {/* <div> */}\n    {/* <input name='title' value={updateinput.title} onChange={input_handler_update}/> */}\n    {/* <input name='author' value={updateinput.author} onChange={input_handler_update}/> */}\n    {/* <button type='button' onClick={update_handler2}>Update</button> */}\n    {/* <button type='button' onClick={submit_handler}>Cancel</button> */}\n    {/* <button type='button' onClick={}>Re-render</button> */}\n    {/* </div> */}\n    {/* {\n        data?.map((val,ind)=>{\n            return(\n                <>\n                <h1>{val.title}</h1>\n                <h2>{val.author}</h2>\n                <button onClick={()=>{delete_handler(val.id)}}>Delete</button>\n                <button onClick={()=>{update_handler1(ind)}}>Update</button>\n                </>\n            )\n        })\n    } */}\n    </>\n  )\n}\n\nexport default App13"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,OAAO,EAAEC,GAAG,QAAQ,YAAY;AACzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EACrC;EACA,MAAM,CAACc,IAAI,EAACC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACnCC,SAAS,CAAC,MAAI;IACVE,OAAO,CAACE,GAAG,EAACD,OAAO,CAAC,CAACY,IAAI,CAAEC,GAAG,IAAG;MAC7BF,OAAO,CAACE,GAAG,CAACH,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACL,MAAMI,aAAa,GAAIC,CAAC,IAAK;IACzBN,QAAQ,CAAC;MAAC,GAAGD,KAAK;MAAE,CAACO,CAAC,CAACC,MAAM,CAACC,IAAI,GAAEF,CAAC,CAACC,MAAM,CAACE;IAAK,CAAC,CAAC;EACxD,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACAf,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACAhB,OAAA;MAAAgB,QAAA,gBACAhB,OAAA;QAAOc,IAAI,EAAC,OAAO;QAACG,QAAQ,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC9CrB,OAAA;QAAOc,IAAI,EAAC,QAAQ;QAACG,QAAQ,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE1C;EAAC,gBAoBJ,CAAC;AAEP,CAAC;AAAAjB,EAAA,CAnEKD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAqEX,eAAeA,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}