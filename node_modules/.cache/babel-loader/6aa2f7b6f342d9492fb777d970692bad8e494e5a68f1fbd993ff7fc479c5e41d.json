{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { get_API } from './API/api';\nimport { getData, url } from './Constant';\n// Create 2 folders (1)Components (2)API\n// Create 1 file like .env but name it Constant.jsx which contains environment variable\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App13 = () => {\n  _s();\n  // const [input,setInput] = useState({})\n  // const [updateinput,setUpdateInput] = useState({})\n  // const [data,setData] = useState([])\n  useEffect(() => {\n    get_API(url, getData).then(res => {\n      setData(res.data);\n    });\n  }, []);\n  // const input_handler = (e) => {\n  //     setInput({...input, [e.target.name]:e.target.value})\n  // }\n  // const submit_handler = () => {\n  //     axios.post(\"http://localhost:3001/posts\",input).then((res)=>{\n  //         setData([...data,res.data]);\n  //     })\n  // }\n  // const delete_handler = (id) => {\n  //     axios.delete(`http://localhost:3001/posts/${id}`).then((res)=>{\n  //         setData(data.filter((one_)=>one_.id !== id))\n  //     })\n  // }\n  // const input_handler_update = (e) => {\n  //     setUpdateInput({...updateinput, [e.target.name]:e.target.value})\n  // }\n  // const update_handler1 = (ind) => {\n  //     setUpdateInput(data[ind])\n  // }\n  // const update_handler2 = () => {\n  //     axios.put(`http://localhost:3001/posts/${updateinput.id}`,updateinput).then((res)=>{\n  //         console.log(res);\n  //         setData([data.map((val_,ind_)=>{\n  //             if(val_.id == updateinput.id){\n  //                 data[ind_] = updateinput\n  //             }\n  //         })])\n  //     })\n  //     // Virtual dom update without API calling\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(App13, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App13;\nexport default App13;\nvar _c;\n$RefreshReg$(_c, \"App13\");","map":{"version":3,"names":["React","useState","useEffect","axios","get_API","getData","url","Fragment","_Fragment","jsxDEV","_jsxDEV","App13","_s","then","res","setData","data","_c","$RefreshReg$"],"sources":["/Users/dhruviklathiya/Desktop/D CODER/09 React js/Project_practice/31-10-2023-REACT-PROJECT-PRACTICE-1/src/App13.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { get_API } from './API/api'\nimport { getData, url } from './Constant'\n// Create 2 folders (1)Components (2)API\n// Create 1 file like .env but name it Constant.jsx which contains environment variable\nconst App13 = () => {\n    // const [input,setInput] = useState({})\n    // const [updateinput,setUpdateInput] = useState({})\n    // const [data,setData] = useState([])\n    useEffect(()=>{\n        get_API(url,getData).then((res)=>{\n            setData(res.data);\n        })\n    },[])\n    // const input_handler = (e) => {\n    //     setInput({...input, [e.target.name]:e.target.value})\n    // }\n    // const submit_handler = () => {\n    //     axios.post(\"http://localhost:3001/posts\",input).then((res)=>{\n    //         setData([...data,res.data]);\n    //     })\n    // }\n    // const delete_handler = (id) => {\n    //     axios.delete(`http://localhost:3001/posts/${id}`).then((res)=>{\n    //         setData(data.filter((one_)=>one_.id !== id))\n    //     })\n    // }\n    // const input_handler_update = (e) => {\n    //     setUpdateInput({...updateinput, [e.target.name]:e.target.value})\n    // }\n    // const update_handler1 = (ind) => {\n    //     setUpdateInput(data[ind])\n    // }\n    // const update_handler2 = () => {\n    //     axios.put(`http://localhost:3001/posts/${updateinput.id}`,updateinput).then((res)=>{\n    //         console.log(res);\n    //         setData([data.map((val_,ind_)=>{\n    //             if(val_.id == updateinput.id){\n    //                 data[ind_] = updateinput\n    //             }\n    //         })])\n    //     })\n    //     // Virtual dom update without API calling\n    // }\n    return (\n    <>\n    {/* <div>\n    <input name='title' onChange={input_handler}/>\n    <input name='author' onChange={input_handler}/>\n    <button type='button' onClick={submit_handler}>Add data</button>\n    </div> */}\n    {/* <div> */}\n    {/* <input name='title' value={updateinput.title} onChange={input_handler_update}/> */}\n    {/* <input name='author' value={updateinput.author} onChange={input_handler_update}/> */}\n    {/* <button type='button' onClick={update_handler2}>Update</button> */}\n    {/* <button type='button' onClick={submit_handler}>Cancel</button> */}\n    {/* <button type='button' onClick={}>Re-render</button> */}\n    {/* </div> */}\n    {/* {\n        data?.map((val,ind)=>{\n            return(\n                <>\n                <h1>{val.title}</h1>\n                <h2>{val.author}</h2>\n                <button onClick={()=>{delete_handler(val.id)}}>Delete</button>\n                <button onClick={()=>{update_handler1(ind)}}>Update</button>\n                </>\n            )\n        })\n    } */}\n    </>\n  )\n}\n\nexport default App13"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AACnC,SAASC,OAAO,EAAEC,GAAG,QAAQ,YAAY;AACzC;AACA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA;EACA;EACAV,SAAS,CAAC,MAAI;IACVE,OAAO,CAACE,GAAG,EAACD,OAAO,CAAC,CAACQ,IAAI,CAAEC,GAAG,IAAG;MAC7BC,OAAO,CAACD,GAAG,CAACE,IAAI,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACAN,OAAA,CAAAF,SAAA,mBAyBE,CAAC;AAEP,CAAC;AAAAI,EAAA,CAnEKD,KAAK;AAAAM,EAAA,GAALN,KAAK;AAqEX,eAAeA,KAAK;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}